yum update -y

kubectl :::
   It will interface the user and kubernetes.
kubectl [command] [type] [name] [config name]
The kubernetes objects can be created using kubectl adhoc commands(not reusable)/ using Manifest file(reusable) ex: *.yaml file.


Pods :::
   (Application programming interface)
   api version: v1 -->pods
   api version: Group_Name/version_number
   kind:

Controller Objects :::
   Replicasets:: It will manage the pod lifecycle and It is a lower-level abstraction that provides basic scaling mechanisms.
   Replication controllers:: key feature of kubernetes and manages the pod lifecycle.
   Daemonsets
   Deployments:: It provides higher-level of abstractions and additional features such as rolling update and rollbacks and versioning of applications.

Diff between replication controller and replicas set :::
## replicaset supports only the set-based selectors whereas the replication controller supports the equality-based selectors.
## replication controller allows rolling-update command whereas the replicaset can not.

Volumes ::: gives persistence to the pods.
   emptyDir:: Default volume. Temporary space, if the pod gets deleted, the volume gets deleted.
   config-Map:: act as input to the pod
   secret:: act as input to the pod
   Host path::
      create a volume in a pod and create a volume in the pod-created respective worker node, and configure both in order to save the pod data wisely.
      This is on the host machine level. and smaller-scale industry
For large-scale industry
   1. Admin registers storage classes
   2. developer creates a claim
   3. After approving the claim developer will use the storage.
   persistent:: a piece of storage in the cluster.    provisioning--->Binding----> Using-----> Reclaiming. (SSD-fast, HDD-slow, glusterFS-Distributed NFS, OBJECT - Storage types)
      provisioning types:
         Static(pv needs to be created before pvc)
         Dynamic(pv is created at the same time as pvc)
   persistent volume claim:: Request for storage from application owners to storage admins in order to allocate the volume for the application.
Services:::
   Nodeport- 30000-32767********
   service port- it should be the same as the pod port.
   Targetport- pod port.
   pod ---> Active Container 
            Passive Container
Load balancer:::
   basically routes the users to the pods with the load balancer service and nodeport service. when the pods are exposed and replicated on different working nodes.
Troubleshoot the issues!
Kubernetes Security! Role Based Access Control 
RBAC divided into the
Role decides what can be done. Subject decides who can do it.
Namespaced----> role, role binding ( Admin, Developer, Default ) 
cluster wide----> cluster role, cluster role binding
Actions: Get, Create, Update, Delete, Patch.

Helm::: package manager in Kubernetes
nodeSelector::: customized pod allocation on worker nodes based on the node label.



















Display Commands :::
kubectl get pods --show-labels  --->to show labels

Deleting Commands :::
kubectl delete pods -l key=value -----> deleting pods based upon the label and its value
kubectl delete rs -l key=value
kubectl delete rc -l key=value
kubectl delete deployment -l key=value
